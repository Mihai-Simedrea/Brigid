
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
$hope-blue: (
    50 : #e0f0f8,
    100 : #b3d9ef,
    200 : #80c0e4,
    300 : #4da6d9,
    400 : #2693d0,
    500 : #0080c8,
    600 : #0078c2,
    700 : #006dbb,
    800 : #0063b4,
    900 : #0050a7,
    A100 : #d1e4ff,
    A200 : #9ec6ff,
    A400 : #6ba8ff,
    A700 : #5299ff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

$royal-purple: (
    50 : #f0e7f2,
    100 : #dac2df,
    200 : #c19aca,
    300 : #a872b4,
    400 : #9653a4,
    500 : #833594,
    600 : #7b308c,
    700 : #702881,
    800 : #662277,
    900 : #531665,
    A100 : #e79eff,
    A200 : #db6bff,
    A400 : #cf38ff,
    A700 : #c81fff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$Brigid-primary: mat.define-palette($hope-blue);
$Brigid-accent: mat.define-palette($royal-purple);

// The warn palette is optional (defaults to red).
$Brigid-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$Brigid-theme: mat.define-light-theme((
  color: (
    primary: $Brigid-primary,
    accent: $Brigid-accent,
    warn: $Brigid-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($Brigid-theme);


html, body { 
  height: 100%;
  background: rgb(0,128,200);
  background: -moz-radial-gradient(circle, rgba(0,128,200,1) 0%, rgba(0,173,230,1) 73%, rgba(0,212,255,1) 100%);
  background: -webkit-radial-gradient(circle, rgba(0,128,200,1) 0%, rgba(0,173,230,1) 73%, rgba(0,212,255,1) 100%);
  background: radial-gradient(circle, rgba(0,128,200,1) 0%, rgba(0,173,230,1) 73%, rgba(0,212,255,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#0080c8",endColorstr="#00d4ff",GradientType=1);
}
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
